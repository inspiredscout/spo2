version: "3.9"
services:
  nginx:
    container_name: nginx
    image: nginx:latest
    # монтируем директорию nginx и сертификат с ключом
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/cert.pem:/etc/cert.pem
      - ./nginx/key.pem:/etc/key.pem
    ports:
    - "80:80"
    - "443:443"
  certbot:
    ports:
      - "6000:80"
    env_file:
      - .env
    # и снова мониторуем директорию nginx
    volumes:
      - ./nginx/:/etc/nginx/
    build:
      context: ./certbot
      dockerfile: Dockerfile
      # задаем переменные среды
      args:
        DOMAIN_EMAIL: ${DOMAIN_EMAIL}
        DOMAIN_URL: ${DOMAIN_URL}
  db:
    image: postgres:latest
    container_name: db
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "$POSTGRES_USER", "-d", "mydb"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 1s
  backend:
    build:
      context: ../spo2back
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "3002:3002"
    depends_on:
      - db
    volumes:
      - ./uploads:/app/uploads
  frontend:
    build:
      context: ../spo2front
      dockerfile: Dockerfile
    container_name: frontend
    ports: 
      - "3000:3000"
volumes:
  postgres_data:
