version: "3.9"
services:
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/sites-enabled:/etc/nginx/conf.d
      - ./logs/nginx:/var/log/nginx
      - ./data/certbot/www:/var/www/certbot/:ro
      - ./data/certbot/conf/:/etc/nginx/ssl/:ro
    depends_on:
      grafana:
        condition: service_started
      portainer:
        condition: service_started
    networks:
      - wloo
  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    volumes:
      - ./data/certbot/www:/var/www/certbot:rw
      - ./data/certbot/conf:/etc/letsencrypt/:rw
  db:
    image: postgres:latest
    container_name: spo2DB
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "$POSTGRES_USER", "-d", "mydb"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 1s
  backend:
    build:
      context: ./spo2back
      dockerfile: Dockerfile
    container_name: spo2BACKEND
    ports:
      - "3000:3000"
    depends_on:
      - db
    volumes:
      - ./src:/app/src
volumes:
  postgres_data:
